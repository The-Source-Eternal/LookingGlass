{
  "name": "rtc-data-stream",
  "version": "0.0.1",
  "description": "convert a webRtc connection into a stream",
  "main": "index.js",
  "scripts": {
    "start": "beefy example.js:index.js --open"
  },
  "author": {
    "name": "kumavis"
  },
  "license": "BSD-2-Clause",
  "dependencies": {},
  "devDependencies": {
    "duplex-emitter": "~2.1.2",
    "rtc-quickconnect": "~0.1.2"
  },
  "readme": "# rtc-data-stream\n\nconvert a webRtc connection into a stream\n\nuse HTML5 [WebRTC](http://www.webrtc.org/) the node way -- with streams\n\n## use\n\nyou can use [browserify](http://github.com/substack/node-browserify) to package this module for browser use.\n\n```javascript\nvar rtcDataStream = require('rtc-data-stream')\nvar quickconnect = require('rtc-quickconnect')\n\nquickconnect({ ns: 'dctest', data: true }).on('dc:open', function(channel, peerId) {\n  var rtc = rtcDataStream(channel)\n  rtc.pipe(somewhereAwesome)\n})\n```\n\n`rtc` is a stream and speaks stream events: `data`, `error` and `end`. that means you can pipe output to anything that accepts streams.\n\n## try\n```\n# install beefy\nnpm install -g beefy\n# clone repo\ngit clone https://github.com/kumavis/rtc-data-stream\ncd rtc-data-stream\n# install dev dependencies\nnpm install\n# start the example\nnpm start\n# open another tab with the generated link\n```\n## credit\nBased on [websocket-stream](https://github.com/maxogden/websocket-stream) by [max ogden](https://twitter.com/maxogden)\n\n## license\nBSD LICENSE\n",
  "readmeFilename": "README.md",
  "_id": "rtc-data-stream@0.0.1",
  "dist": {
    "shasum": "6430f81f9aed5a48355f8ba7f5c7f8444ce5195a"
  },
  "_from": "rtc-data-stream@",
  "_resolved": "https://registry.npmjs.org/rtc-data-stream/-/rtc-data-stream-0.0.1.tgz"
}
